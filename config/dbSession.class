<?php
//***********************************************************************************************
//********************************************************************************* TITLE - START
/**
 *	file:	dbSession.class
 *	auth:	Mike Donnici
 *	desc:	See line 43 for the database variables to be altered at setup.
 *          A class for session with mysql server - confiuration variables.
 *	date:	12 Sep 2001
 *	last:	20th May 2018 - Dion Patelis
 *
 *  log:    DP 19/2/15 - 2.3.5 - Using getskelton.com to make TDLQ work on all devies.
 */
//********************************************************************************** TITLE - END
//**********************************************************************************************


//***********************************************************************************************
//***************************************************************************** VARIABLES - START
/**
 *	Some configuration variables here. Some in the class below.
 *
 */
$conf_button = 1;                       // Config button in the topIndex002.php
$user_authenticated = $_POST['user_authenticated'];
$login_instance_token = $_POST['login_instance_token'];
$login_name = $_POST['name'];
$login_pass = $_POST['pass'];
$login_UserID = $_POST['UserID'];
$db_folder = 'todolistq_2_4_4';
$_POST['db_folder'] = $db_folder;
$_POST['ProgramTitle'] = "To Do List Q 2.4.7";
$ProgramName = "<span class=\"titles\"  >$ProgramTitle</span>
                <!-- <font face=\"arial\" size=\"2\">FP</font> -->";
$header_size = "4";
$_POST['header_size'] = $header_size;
$db_has_been_setup = "no";
//****************************************************************************** VARIABLES - END
//**********************************************************************************************

class dbSession {

    // Database Variables to be altered at initial setup.
    var $dbHost = "localhost";
    var $dbUser = "user_name";
    var $dbPass = "password";
    var $dbName = "database_name";

    var $max_active_users_allowed = "300";
    var $link;
    var $errorNum;
    var $errorMessage;
    var $active_users;
    var $max_active_users_exceeded;


    // Constructor - connect to server and select db
    function dbSession() {
        if ( $this->link = mysql_connect($this->dbHost, $this->dbUser, $this->dbPass) ) {
            if ( !mysql_selectdb($this->dbName,$this->link) ) {
                $this->setError();
            }
        }
    }

    function get_dbUser() {
        return $this->dbUser;
    }

    function get_dbPass() {
        return $this->dbPass;
    }

    function get_dbName() {
        return $this->dbName;
    }

    function max_active_users_exceeded() {
        $dbs_max_users = new dbSession();
        $sql_max_users = "SELECT UserActive from user WHERE UserActive = 1";
        $Results_max_users = $dbs_max_users->getResult($sql_max_users);
        while ($row = $dbs_max_users->getArray($Results_max_users)) {
            //$this->got_babies = $row['JobChild'];

            if (empty($number_of_active_users)) {
                $number_of_active_users = 0;
            }
            // $number_of_active_users++;
            $this->active_users = ++$number_of_active_users;

        }
        // echo "\$number_of_active_users = $number_of_active_users<BR>";
        // echo "\$max_active_users_allowed = " . $this->max_active_users_allowed . "<BR>";
        if ($number_of_active_users > $this->max_active_users_allowed) {
            $this->max_active_users_exceeded = 1;
        }else{
            $this->max_active_users_exceeded = 0;
        }
        // echo "Job $JobParent has $number_of_children sub jobs attached to it.<BR>";
    }

    function getResult($sql) {
        if ( $r = mysql_query($sql) ) {
            return $r;
        } else {
            $this->setError();
        }
    }

    function getRow($res) {
        if ( $r = mysql_fetch_row($res) ) {
            return $r;
        } else {
            $this->setError();
        }
    }

    function getArray($res) {
        if ( $a = mysql_fetch_array($res) ) {
            return $a;
        } else {
            $this->setError();
        }
    }

    function getValue($s) {
        if ($res = $this->getResult($s)) {
            if ($row = $this->getRow($res)) {
                return $row[0];
            } else {
                $this->setError();
            }
        }
    }

    function getValues($s) {
        if ($res = $this->getResult($s)) {
            if ($r = $this->getArray($res)) {
                return $r;
            } else {
                $this->setError();
            }
        }
    }

    function getLastID() {
        if ($id = mysql_insert_id($this->link) ) {
            return $id;
        } else {
            return 0;
        }
    }

    function close() {
        mysql_close($this->link);
    }

    function setError() {
        $this->errNum = mysql_errno($this->link);
        $this->errMessage = mysql_error($this->link);
    }

    function getError() {
        $e = $this->errNum . ": " .	$this->errMessage;
        return $e;
    }

    function printError() {
        echo "<b><font color=\"red\">" . $this->errNum . ": " .
            $this->errMessage . "</b></font><BR>";
    }
}
//END dbSession class
?>
